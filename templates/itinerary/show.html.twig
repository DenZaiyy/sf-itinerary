{% extends 'base.html.twig' %}

{% block title %}Itinenary {{ itinerary.title }}{% endblock %}

{% block body %}
    <div class="flex flex-col gap-4" data-itinerary-id="{{ itinerary.id }}" id="itinerary">
        <div class="flex justify-between items-center mb-4 w-full">
            <div>
                <a href="{{ path('itinerary_index') }}" class="block w-max hover:underline">Retour</a>
                <h1 class="text-2xl font-bold capitalize">{{ itinerary.title }}</h1>
                <p>{{ itinerary.description }}</p>
            </div>
        </div>

        <div class="flex flex-col lg:flex-row gap-2 w-full">
            <div class="lg:w-1/3 flex flex-col gap-2 overflow-auto max-h-[600px]" id="sort-container">
                {% for location in itinerary.LocationItinerary %}
                    <a onclick="clickMarker({{ loop.index0 }})"
                       class="location flex gap-2 p-2 bg-white shadow rounded-md items-center cursor-pointer relative"
                       data-id="{{ location.id }}"
                    >
                        <div class="order py-2 px-4 {{ location.mustToSee ? 'bg-orange-500' : 'bg-green-600' }} text-white rounded-full text-center" data-order="{{ location.order }}">
                            {{ location.order }}
                        </div>
                        <div>
                            <h2 class="font-bold text-xl capitalize">{{ location.location.name }}</h2>
                            <p class="text-sm text-gray-400">{{ location.location.description }}</p>
                        </div>
                        <div class="absolute top-2 right-2 ">
                            <form action="{{ path('location_delete', {'id': location.id, 'itineraryId': itinerary.id}) }}" method="post" class="z-10">
                                <input type="hidden" name="_method" value="DELETE">
                                <button type="submit" class="cursor-pointer text-red-500" onclick="return confirm('Êtes-vous sur de vouloir supprimer cet itinéraire?')">
                                    {{ ux_icon('lucide:trash-2', {height: "20px", width: "20px", 'aria-label': "Delete itinerary" }) }}
                                </button>
                            </form>
                        </div>
                    </a>
                {% endfor %}
            </div>
            <div id="map"
                 class="lg:w-2/3 min-h-[450px] max-h-[600px] border border-black/30 rounded-md overflow-hidden"></div>
        </div>
    </div>

    <script>
        var map = L.map('map')

        L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {
            maxZoom: 18,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'
        }).addTo(map);

        var polyline = []
        var markers = []

        {% for index, location in itinerary.LocationItinerary %}

        {% if index == 0 %}
        map.setView([{{ location.location.latitude }}, {{ location.location.longitude }}], 13);
        {% endif %}

        var icon = L.divIcon({
            className: "!flex items-center justify-center {{ location.mustToSee ? 'bg-orange-500' : 'bg-green-600' }} text-white rounded-full text-center",
            html: {{ location.order }},
            iconSize: [30, 30],
            iconAnchor: [15, 15]
        })

        var marker = L.marker([{{ location.location.latitude }}, {{ location.location.longitude }}], {icon: icon})
            .addTo(map)
            .bindPopup('<h2 class="font-bold">{{ location.location.name }}</h2><p>{{ location.location.description }}</p>')
            .on('click', clickZoom);

        markers.push(marker)

        function clickMarker(index) {
            if (markers[index]) {
                markers[index].fire('click');
                map.setView(markers[index].getLatLng(), 16);
            }
        }

        polyline.push(L.latLng({{ location.location.latitude }}, {{ location.location.longitude }}),)
        {% endfor %}

        L.polyline(polyline, {color: 'blue'}).addTo(map);

        function clickZoom(e) {
            map.setView(e.target.getLatLng(), 15);
        }
    </script>
{% endblock %}



