{% extends 'base.html.twig' %}

{% block title %}Itinary {{ itinerary.title }}{% endblock %}

{% block body %}

    <div class="flex flex-col gap-4">
        <a href="{{ path('itinerary_index') }}" class="block w-max hover:underline">Retour</a>
        <h1 class="text-2xl font-bold capitalize">{{ itinerary.title }}</h1>
        <p>{{ itinerary.description }}</p>

        <div class="flex flex-col lg:flex-row gap-2 w-full">
            <div class="lg:w-1/3 flex flex-col gap-2">
                {% for index, location in itinerary.LocationItinerary %}
                    {#<pre>{{ dump(location) }}</pre>#}
                    <div class="flex gap-2 p-2 bg-white shadow rounded-md items-center cursor-pointer">
                        <div class="py-2 px-4 {{ location.mustToSee ? 'bg-orange-500' : 'bg-green-600' }} text-white rounded-full text-center">
                            {{  location.order }}
                        </div>
                        <div>
                            <h2 class="font-bold text-xl capitalize">{{ location.location.name }}</h2>
                            <p class="text-sm text-gray-400">{{ location.location.description }}</p>
                        </div>
                    </div>
                {% endfor %}
            </div>
            <div id="map" class="lg:w-2/3 min-h-[450px] border border-black/30 rounded-md overflow-hidden"></div>
        </div>
    </div>

    <script>
        let map = L.map('map')

        L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {
            maxZoom: 16,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'
        }).addTo(map);

        let polyline = []

        {% for index, location in itinerary.LocationItinerary %}

        {% if index == 0 %}
        map.setView([{{ location.location.latitude }}, {{ location.location.longitude }}], 13);
        {% endif %}

        var icon = L.divIcon({
            className: "flex items-center justify-center {{ location.mustToSee ? 'bg-orange-500' : 'bg-green-600' }} text-white rounded-full text-center",
            html: {{ location.order }},
            iconSize: [30, 30],
            iconAnchor: [15, 15]
        })

        L.marker([{{ location.location.latitude }}, {{ location.location.longitude }}], { icon: icon })
            .addTo(map)
            .bindPopup('<h2 class="font-bold">{{ location.location.name }}</h2><p>{{ location.location.description }}</p>')
            .on('click', clickZoom);

        polyline.push(L.latLng({{ location.location.latitude }}, {{ location.location.longitude }}),)
        {% endfor %}

        L.polyline(polyline, {color: 'blue'}).addTo(map);

        function clickZoom(e) {
            map.setView(e.target.getLatLng(), 13);
        }
    </script>
{% endblock %}



